//Vance Elliott, https://github.com/vanceelliott/Programming-Languages/blob/main/Chivalry/grammar.bnf

program ::= statementList?

statementList ::= statement statementList?

statement ::= expression end
            | initialization
            | tavernDeclaration
            | declaration
            | assignment
            | tavernAssignment
            | functionAssignment
            | functionCall end
            | loop
            | conditional
            | holler
            | hither

initialization ::= type "squire" IDENTIFIER "hold" expression end

declaration ::= type "squire" IDENTIFIER end

assignment::= "give" "(" IDENTIFIER COMMA expression ")" end

functionAssignment ::= type "squire" "do" block "with" "(" group ")" end

functionCall ::=  IDENTIFIER "with" group

loop ::= riverTrolls | mountainTrolls | mischievousTrolls

riverTrolls::= expression "river trolls work for" expression "food" block

mountainTrolls::= "feed mountain troll" expression block

mischievousTrolls::= "mischievous trolls play"

conditional ::= "divine" expression block ("villain" block)?

block ::= "(" statementList ")"

expression ::= primary
            |  unary
            |  binary
            | ternary
            | variadic

primary ::= type | IDENTIFIER | functionCall | tavernCall | group

group ::= "(" expression ")"

type ::= NUM
       | WORD
       | moral
       | GHOUL

moral ::= GOOD | EVIL

unary ::= unaryOperator group

binary ::= binaryOperator group | expression comparator expression

ternary ::= ternaryOperator group

variadic ::= variadicOperator group

unaryOperator ::= "switch" | "despair"

binaryOperator ::= "seer" | "voodoo" | "holy" | "realistic"

comparator ::= "better" | "equal" | "betterequal"

ternaryOperator ::= "prettyGood"

variadicOperator ::= "combine" | "smash" | "witchcraft" | "chop"

tavernDeclaration ::= "build tavern" IDENTIFIER expression "rooms"

tavernAssignment ::= IDENTIFIER "room" expression "guest" expression

tavernCall ::= IDENTIFIER "room" expression

holler::= "holler" group
hither::= "hither" group

end::= "!" //I'm going to change this because too many people already have this as their end character
