//Vance Elliott, https://github.com/vanceelliott/Programming-Languages/blob/main/Chivalry/grammar.bnf

program ::= statementList?

statementList ::= statement statementList?

statement ::= expression end
            | initialization
            | declaration
            | assignment
            | functionCall end
            | loop
            | conditional

initialization ::= "hold" type "squire" IDENTIFIER expression end
                | functionDefinition
                | tavernDeclaration

declaration ::= type "squire" IDENTIFIER end

assignment::= "give" IDENTIFIER primary end
            | tavernAssignment

functionDefinition ::= "do" type "squire" IDENTIFIER block "with" "(" parameterList ")" end

functionCall ::=  IDENTIFIER "with" "(" primaryList ")"

loop ::= riverTrolls | mountainTrolls | mischievousTrolls

riverTrolls::= primary "river" "trolls" "work" "for" primary "food" block

mountainTrolls::= "feed" "mountain" "troll" primary block

mischievousTrolls::= "mischievous" "trolls" "play"

conditional ::= "divine" expression block ("villain" block)?

block ::= "[" statementList "]"

parameterList ::= parameter
                | parameter COMMA parameterList

parameter ::= type IDENTIFIER

expression ::= primary
            |  unary
            |  variadic
            |  comparator
            |  functionCall

primary ::= type | IDENTIFIER | tavernCall | group

unary ::= unaryOperator "(" primary ")"

variadic ::= (binaryOperator | ternaryOperator | variadicOperator) "(" primaryList ")"


primaryList ::= primary
              | primary "," primaryList

group ::= "(" expression ")"

type ::= NUM
       | WORD
       | moralLiteral

moralLiteral ::= GOOD | EVIL

unaryOperator ::= "switch" | "despair"

binaryOperator ::= "seer" | "voodoo" | "holy" | "realistic"

comparator ::= "better" | "equal" | "betterequal"

ternaryOperator ::= "prettyGood"

variadicOperator ::= "combine" | "smash" | "witchcraft" | "chop"

tavernDeclaration ::= "build" "tavern" IDENTIFIER primary "rooms"

tavernAssignment ::= IDENTIFIER "room" primary "guest" expression

tavernCall ::= IDENTIFIER "room number" expression

end::= "!" //I'm going to change this because too many people already have this as their end character
